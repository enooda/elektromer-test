package tests;
import org.junit.After;
import org.junit.Assume;
import org.junit.Before;
import org.junit.Test;
import java.time.LocalDate;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.concurrent.ThreadLocalRandom;

public class elektromer {

    private int x = 2;
    private int y = 100;
    private boolean isValid = true;
    private boolean validationOn = true;
    private LocalDate dnesnyDatum;
    private LocalDate poslednyDatum;
    private int pocetDniInt;
    private int nulovaSpotreba;
    private List<String> dovodOdpoctu;
    private List<String> druhOdpoctu;


    @Before
    public void setUp() {

        nulovaSpotreba = 0;

        dovodOdpoctu = new ArrayList<String>();
        for (int i = 1; i <= 10; i++) {
            dovodOdpoctu.add(String.format("%02d", i));
        }

        druhOdpoctu = new ArrayList<String>();
        for (int i = 1; i <= 10; i++) {
            druhOdpoctu.add(String.format("%02d", i));
        }
    }

    @Test
    public void validaciaElektromera() {
        Assume.assumeTrue(validationOn);

        for (int i = 0; i < 15; i++) {

            dnesnyDatum = LocalDate.now();
            poslednyDatum = LocalDate.now().minusDays(ThreadLocalRandom.current().nextLong(365));
            pocetDniInt = (int) ChronoUnit.DAYS.between(poslednyDatum, dnesnyDatum);

            Random rand = new Random();
            int dovodOdpoctuIndex = rand.nextInt(dovodOdpoctu.size());
            int dovodOdpoctuValue = Integer.parseInt(dovodOdpoctu.get(dovodOdpoctuIndex));

            int druhOdpoctuIndex = rand.nextInt(druhOdpoctu.size());
            int druhOdpoctuValue = Integer.parseInt(druhOdpoctu.get(druhOdpoctuIndex));

            int odpocet = rand.nextInt(1900) + 100;
            int predchadzajuciStav = rand.nextInt(1900) + 100;
            int spotreba = odpocet - predchadzajuciStav;

            if (spotreba == 0) {
                nulovaSpotreba++;
                if (nulovaSpotreba > x
                        && pocetDniInt >= y
                        && !(druhOdpoctuValue == 3
                        || druhOdpoctuValue == 2
                        || dovodOdpoctuValue == 6)) {

                    isValid = false;
                } else {
                    isValid = true;
                }
            } else {
                nulovaSpotreba = 0;
                isValid = true;
            }

            if (isValid) {
                System.out.println("Dáta sú vierohodné");
            } else {
                System.out.println("Dáta nie sú vierohodné");
            }
        }
    }

    @After
    public void tearDown() {
        System.out.println("Koniec testu.");
    }
}
